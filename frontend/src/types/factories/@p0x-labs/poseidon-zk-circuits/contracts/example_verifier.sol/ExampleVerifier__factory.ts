/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ExampleVerifier,
  ExampleVerifierInterface,
} from "../../../../../@p0x-labs/poseidon-zk-circuits/contracts/example_verifier.sol/ExampleVerifier";

const _abi = [
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "input",
        type: "uint256[2]",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d80806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f5c9d69e14610030575b600080fd5b61004a60048036038101906100459190611a86565b61004c565b005b61005461181b565b604051806040016040528086600060028110610099577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518152602001866001600281106100dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518152508160000181905250604051806040016040528060405180604001604052808760006002811061013d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015160006002811061017b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518152602001876000600281106101bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516001600281106101fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151815250815260200160405180604001604052808760016002811061024f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015160006002811061028d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518152602001876001600281106102d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015160016002811061030f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518152508152508160200181905250604051806040016040528084600060028110610367577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518152602001846001600281106103ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151815250816040018190525060006103c5610885565b9050806080015151600160026103db9190611b5c565b14610412576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160800151600081518110610452577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905060005b600281101561051d576105088261050385608001516001856104819190611b5c565b815181106104b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518885600281106104f9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151610d98565b610f26565b9150808061051590611c7b565b91505061045f565b506000600467ffffffffffffffff811115610561577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561059a57816020015b61058761184e565b81526020019060019003908161057f5790505b5090506000600467ffffffffffffffff8111156105e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561061957816020015b610606611868565b8152602001906001900390816105fe5790505b50905061062985600001516110a7565b82600081518110610663577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508460200151816000815181106106ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508360000151826001815181106106f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250836020015181600181518110610741577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508282600281518110610787577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508360400151816002815181106107d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525084604001518260038151811061081b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250836060015181600381518110610865577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525061087a82826111c8565b505050505050505050565b61088d61188e565b60405180604001604052807f1fca1bffff5750f207496f33135c888c3dc6c589c3eb1d0f44d774c08ae320f081526020017f2a05aee3af55d392d74cedb842b695f3806cd2f828f69569cd08041b0688a1288152508160000181905250604051806040016040528060405180604001604052807f0d1700570d923e05206d96ccc16acb0e3254f2457e45ebe17b61606a08cb2ab481526020017f1aa71292d71a3848cf3465f3d525a5e3b1e6a768e0129bdda9af0f7d148c033a815250815260200160405180604001604052807f15723e47d438024acc79a1ae32c51a2d97e88a6dd21ef853ee90d366b9cd6eea81526020017f1f90a741bce27cebb5713e13fad2aab919d50f67a4d45030705abe845c96adee8152508152508160200181905250604051806040016040528060405180604001604052807f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed815250815260200160405180604001604052807f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81526020017f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa8152508152508160400181905250604051806040016040528060405180604001604052807f0be5a30084dbfcf075a1af878b1705d5df99334760fcb6ee4029fece9c6eedc881526020017f13972e954a8ce019db11da882b443141b943d4b97f9e224aa30a99b7e8443576815250815260200160405180604001604052807f0398f23c4177e000c2bfd28fcd3d2c035dfef77da71607b965e5fe54baf862dd81526020017f26ac6da7b4e4cc20bb4af388d7e5cc1295dea15ec74430ab936932426c4e96d98152508152508160600181905250600367ffffffffffffffff811115610b7a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610bb357816020015b610ba061184e565b815260200190600190039081610b985790505b50816080018190525060405180604001604052807f21a1533a59361985d25d98b99873a3c516b04b46f9366b492ac3004c96069de881526020017f1b4afaae46996677bb6854474b84cf656f8562c0fe112ba6463bd04fb84b5e158152508160800151600081518110610c4f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060405180604001604052807f2ec969a0dda32371610456ff06da35aeddcd959aba8abc8691ed03bc7532a4b881526020017f0eeb20a8a27e16b0b5915bc2a2d1cc1e514b2865c5a0fc3ecce5f59ae65d7af88152508160800151600181518110610ced577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060405180604001604052807e8518b56c91ed54b1bebffa86a167f836bac34e4cbefd9b6f7351c8bc76911e81526020017f20d1354b290453d4c226b206916a039d9924ddced84f1a8a67c0034ae46113c38152508160800151600281518110610d8a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525090565b610da061184e565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210610df9576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e016118d5565b836000015181600060038110610e40577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050836020015181600160038110610e88577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020181815250508281600260038110610ecc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050600060608360808460076107d05a03fa905080610f1e576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505092915050565b610f2e61184e565b610f366118f7565b836000015181600060048110610f75577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050836020015181600160048110610fbd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050826000015181600260048110611005577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201818152505082602001518160036004811061104d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002018181525050600060608360c08460066107d05a03fa90508061109f576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505092915050565b6110af61184e565b600082600001511480156110c7575060008260200151145b156110ea57604051806040016040528060008152602001600081525090506111c3565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47826000015110158061114157507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47826020015110155b15611178576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808360000151815260200183602001517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476111bd9190611c0c565b81525090505b919050565b8051825114611203576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008251905060006006826112189190611bb2565b905060008167ffffffffffffffff81111561125c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561128a5781602001602082028036833780820191505090505b50905060005b8381101561176f578581815181106112d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600001518260006006846112ed9190611bb2565b6112f79190611b5c565b8151811061132e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050858181518110611373577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516020015182600160068461138f9190611bb2565b6113999190611b5c565b815181106113d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050848181518110611415577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516000015160006002811061145a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015182600260068461146f9190611bb2565b6114799190611b5c565b815181106114b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508481815181106114f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516000015160016002811061153a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015182600360068461154f9190611bb2565b6115599190611b5c565b81518110611590577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508481815181106115d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516020015160006002811061161a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015182600460068461162f9190611bb2565b6116399190611b5c565b81518110611670577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508481815181106116b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151602001516001600281106116fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015182600560068461170f9190611bb2565b6117199190611b5c565b81518110611750577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050808061176790611c7b565b915050611290565b50611778611919565b6000602082602086026020860160086107d05a03fa90508015806117db57506001826000600181106117d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015114155b15611812576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050565b604051806060016040528061182e61184e565b815260200161183b611868565b815260200161184861184e565b81525090565b604051806040016040528060008152602001600081525090565b604051806040016040528061187b61193b565b815260200161188861193b565b81525090565b6040518060a001604052806118a161184e565b81526020016118ae611868565b81526020016118bb611868565b81526020016118c8611868565b8152602001606081525090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b6040518060200160405280600190602082028036833780820191505090505090565b6040518060400160405280600290602082028036833780820191505090505090565b600061197061196b84611b10565b611aeb565b9050808285604086028201111561198657600080fd5b60005b858110156119b6578161199c8882611a4a565b845260208401935060408301925050600181019050611989565b5050509392505050565b60006119d36119ce84611b36565b611aeb565b905080828560208602820111156119e957600080fd5b60005b85811015611a1957816119ff8882611a71565b8452602084019350602083019250506001810190506119ec565b5050509392505050565b600082601f830112611a3457600080fd5b6002611a4184828561195d565b91505092915050565b600082601f830112611a5b57600080fd5b6002611a688482856119c0565b91505092915050565b600081359050611a8081611d33565b92915050565b6000806000806101408587031215611a9d57600080fd5b6000611aab87828801611a4a565b9450506040611abc87828801611a23565b93505060c0611acd87828801611a4a565b925050610100611adf87828801611a4a565b91505092959194509250565b6000611af5611b06565b9050611b018282611c4a565b919050565b6000604051905090565b600067ffffffffffffffff821115611b2b57611b2a611cf3565b5b602082029050919050565b600067ffffffffffffffff821115611b5157611b50611cf3565b5b602082029050919050565b6000611b6782611c40565b9150611b7283611c40565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ba757611ba6611cc4565b5b828201905092915050565b6000611bbd82611c40565b9150611bc883611c40565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c0157611c00611cc4565b5b828202905092915050565b6000611c1782611c40565b9150611c2283611c40565b925082821015611c3557611c34611cc4565b5b828203905092915050565b6000819050919050565b611c5382611d22565b810181811067ffffffffffffffff82111715611c7257611c71611cf3565b5b80604052505050565b6000611c8682611c40565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cb957611cb8611cc4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611d3c81611c40565b8114611d4757600080fd5b5056fea264697066735822122042417bc0bd42f0fcd790ac128ceb640e8d48d7eafe750d7e5f8a183746747ffb64736f6c63430008040033";

type ExampleVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleVerifier__factory extends ContractFactory {
  constructor(...args: ExampleVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExampleVerifier> {
    return super.deploy(overrides || {}) as Promise<ExampleVerifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExampleVerifier {
    return super.attach(address) as ExampleVerifier;
  }
  override connect(signer: Signer): ExampleVerifier__factory {
    return super.connect(signer) as ExampleVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleVerifierInterface {
    return new utils.Interface(_abi) as ExampleVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleVerifier {
    return new Contract(address, _abi, signerOrProvider) as ExampleVerifier;
  }
}
