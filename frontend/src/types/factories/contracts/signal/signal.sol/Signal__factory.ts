/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Signal,
  SignalInterface,
} from "../../../../contracts/signal/signal.sol/Signal";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rc",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "message",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "externalNullifier",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "signal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109f13803806109f18339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610111565b600081519050610087816100fa565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100da565b9050919050565b60006100d3826100b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610103816100c8565b811461010e57600080fd5b50565b6108d1806101206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806346cf37b614610030575b600080fd5b61004a6004803603810190610045919061047e565b610060565b604051610057919061073c565b60405180910390f35b60008015156001600086815260200190815260200160002060009054906101000a900460ff161515146100c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100bf90610757565b60405180910390fd5b60006008866040516020016100dd91906106da565b6040516020818303038152906040528051906020012060001c901c905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fe8c13b60405180604001604052808660006008811061017b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201358152602001866001600881106101bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201358152506040518060400160405280604051806040016040528089600260088110610217577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581526020018960036008811061025b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581525081526020016040518060400160405280896004600881106102ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201358152602001896005600881106102f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020135815250815250604051806040016040528088600660088110610341577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020135815260200188600760088110610385577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581525060405180608001604052808d81526020018b81526020018781526020018a8152506040518563ffffffff1660e01b81526004016103cd94939291906106f5565b60006040518083038186803b1580156103e557600080fd5b505afa1580156103f9573d6000803e3d6000fd5b50505050600180600087815260200190815260200160002060006101000a81548160ff021916908315150217905550600191505095945050505050565b60008190508260206008028201111561044e57600080fd5b92915050565b6000813590506104638161086d565b92915050565b60008135905061047881610884565b92915050565b6000806000806000610180868803121561049757600080fd5b60006104a588828901610469565b95505060206104b688828901610454565b94505060406104c788828901610469565b93505060606104d888828901610469565b92505060806104e988828901610436565b9150509295509295909350565b6000610502838361057d565b60408301905092915050565b600061051a83836106cb565b60208301905092915050565b61052f81610795565b61053981846107dd565b925061054482610777565b8060005b8381101561057557815161055c87826104f6565b9650610567836107b6565b925050600181019050610548565b505050505050565b610586816107a0565b61059081846107e8565b925061059b82610781565b8060005b838110156105cc5781516105b3878261050e565b96506105be836107c3565b92505060018101905061059f565b505050505050565b6105dd816107a0565b6105e781846107f3565b92506105f282610781565b8060005b8381101561062357815161060a878261050e565b9650610615836107c3565b9250506001810190506105f6565b505050505050565b610634816107ab565b61063e81846107fe565b92506106498261078b565b8060005b8381101561067a578151610661878261050e565b965061066c836107d0565b92505060018101905061064d565b505050505050565b61068b8161081a565b82525050565b6106a261069d82610826565b61083a565b82525050565b60006106b5600e83610809565b91506106c082610844565b602082019050919050565b6106d481610830565b82525050565b60006106e68284610691565b60208201915081905092915050565b60006101808201905061070b60008301876105d4565b6107186040830186610526565b61072560c08301856105d4565b61073361010083018461062b565b95945050505050565b60006020820190506107516000830184610682565b92915050565b60006020820190508181036000830152610770816106a8565b9050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600060049050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b7f616c7265616479207369676e616c000000000000000000000000000000000000600082015250565b61087681610826565b811461088157600080fd5b50565b61088d81610830565b811461089857600080fd5b5056fea26469706673582212209c1b0c140f03b502aac6f318bc95ea7c3a5147f00f7bd2efa6a69d71dee41dc464736f6c63430008040033";

type SignalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Signal__factory extends ContractFactory {
  constructor(...args: SignalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _verifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Signal> {
    return super.deploy(_verifier, overrides || {}) as Promise<Signal>;
  }
  override getDeployTransaction(
    _verifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifier, overrides || {});
  }
  override attach(address: string): Signal {
    return super.attach(address) as Signal;
  }
  override connect(signer: Signer): Signal__factory {
    return super.connect(signer) as Signal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignalInterface {
    return new utils.Interface(_abi) as SignalInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Signal {
    return new Contract(address, _abi, signerOrProvider) as Signal;
  }
}
