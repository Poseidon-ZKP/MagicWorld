/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Example,
  ExampleInterface,
} from "../../../contracts/example/Example";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "verifier_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "input",
        type: "uint256[2]",
      },
    ],
    name: "joinGameWithProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mulResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052600a60809081525034801561001857600080fd5b506040516108c63803806108c6833981810160405281019061003a9190610105565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a190610151565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101f4565b6000815190506100ff816101dd565b92915050565b60006020828403121561011757600080fd5b6000610125848285016100f0565b91505092915050565b600061013b601883610171565b9150610146826101b4565b602082019050919050565b6000602082019050818103600083015261016a8161012e565b9050919050565b600082825260208201905092915050565b600061018d82610194565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f696e76616c696420766572696669657220616464726573730000000000000000600082015250565b6101e681610182565b81146101f157600080fd5b50565b6080516106b861020e600039600060c401526106b86000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632b7ac3f314610046578063425fbb6814610064578063e0a5daa914610082575b600080fd5b61004e61009e565b60405161005b919061046b565b60405180910390f35b61006c6100c2565b60405161007991906104cd565b60405180910390f35b61009c600480360381019061009791906102a4565b6100e6565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f5c9d69e858585856040518563ffffffff1660e01b81526004016101459493929190610486565b60006040518083038186803b15801561015d57600080fd5b505afa158015610171573d6000803e3d6000fd5b5050505050505050565b600061018e6101898461050d565b6104e8565b905080828560408602820111156101a457600080fd5b60005b858110156101d457816101ba8882610268565b8452602084019350604083019250506001810190506101a7565b5050509392505050565b60006101f16101ec84610533565b6104e8565b9050808285602086028201111561020757600080fd5b60005b85811015610237578161021d888261028f565b84526020840193506020830192505060018101905061020a565b5050509392505050565b600082601f83011261025257600080fd5b600261025f84828561017b565b91505092915050565b600082601f83011261027957600080fd5b60026102868482856101de565b91505092915050565b60008135905061029e8161066b565b92915050565b60008060008061014085870312156102bb57600080fd5b60006102c987828801610268565b94505060406102da87828801610241565b93505060c06102eb87828801610268565b9250506101006102fd87828801610268565b91505092959194509250565b6000610315838361039f565b60408301905092915050565b600061032d838361044d565b60208301905092915050565b610342816105be565b82525050565b6103518161056d565b61035b818461059d565b925061036682610559565b8060005b8381101561039757815161037e8782610309565b965061038983610583565b92505060018101905061036a565b505050505050565b6103a881610578565b6103b281846105a8565b92506103bd82610563565b8060005b838110156103ee5781516103d58782610321565b96506103e083610590565b9250506001810190506103c1565b505050505050565b6103ff81610578565b61040981846105b3565b925061041482610563565b8060005b8381101561044557815161042c8782610321565b965061043783610590565b925050600181019050610418565b505050505050565b610456816105f0565b82525050565b610465816105f0565b82525050565b60006020820190506104806000830184610339565b92915050565b60006101408201905061049c60008301876103f6565b6104a96040830186610348565b6104b660c08301856103f6565b6104c46101008301846103f6565b95945050505050565b60006020820190506104e2600083018461045c565b92915050565b60006104f2610503565b90506104fe82826105fa565b919050565b6000604051905090565b600067ffffffffffffffff8211156105285761052761062b565b5b602082029050919050565b600067ffffffffffffffff82111561054e5761054d61062b565b5b602082029050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b60006105c9826105d0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6106038261065a565b810181811067ffffffffffffffff821117156106225761062161062b565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610674816105f0565b811461067f57600080fd5b5056fea264697066735822122091d5a1a74417b30923d84851093f7dee1e3c91dc555bff711306c3cac564c0a364736f6c63430008040033";

type ExampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Example__factory extends ContractFactory {
  constructor(...args: ExampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    verifier_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Example> {
    return super.deploy(verifier_, overrides || {}) as Promise<Example>;
  }
  override getDeployTransaction(
    verifier_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(verifier_, overrides || {});
  }
  override attach(address: string): Example {
    return super.attach(address) as Example;
  }
  override connect(signer: Signer): Example__factory {
    return super.connect(signer) as Example__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleInterface {
    return new utils.Interface(_abi) as ExampleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Example {
    return new Contract(address, _abi, signerOrProvider) as Example;
  }
}
