/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Group,
  GroupInterface,
  IGroup,
} from "../../../../contracts/group/group.sol/Group";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "merkleTreeDepth",
            type: "uint256",
          },
        ],
        internalType: "struct IGroup.Verifier[]",
        name: "_verifiers",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Semaphore__GroupAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "Semaphore__GroupDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "Semaphore__GroupIdIsNotLessThanSnarkScalarField",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "merkleTreeDepth",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "zeroValue",
        type: "uint256",
      },
    ],
    name: "GroupCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "merkleTreeRoot",
        type: "uint256",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "merkleTreeRoot",
        type: "uint256",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newIdentityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "merkleTreeRoot",
        type: "uint256",
      },
    ],
    name: "MemberUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
    ],
    name: "addMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "merkleTreeDepth",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "createGroup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getMerkleTreeDepth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getMerkleTreeRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getNumberOfMerkleTreeLeaves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "proofSiblings",
        type: "uint256[]",
      },
      {
        internalType: "uint8[]",
        name: "proofPathIndices",
        type: "uint8[]",
      },
    ],
    name: "removeMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "updateGroupAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newIdentityCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "proofSiblings",
        type: "uint256[]",
      },
      {
        internalType: "uint8[]",
        name: "proofPathIndices",
        type: "uint8[]",
      },
    ],
    name: "updateMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bed38038062001bed833981810160405281019062000037919062000260565b60005b81518160ff1610156200013557818160ff168151811062000084577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516000015160016000848460ff1681518110620000d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160200151815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060010190506200003a565b5050620003e5565b6000620001546200014e84620002ce565b620002a5565b905080838252602082019050828560408602820111156200017457600080fd5b60005b85811015620001a857816200018d8882620001f6565b84526020840193506040830192505060018101905062000177565b5050509392505050565b600081519050620001c381620003b1565b92915050565b600082601f830112620001db57600080fd5b8151620001ed8482602086016200013d565b91505092915050565b6000604082840312156200020957600080fd5b620002156040620002a5565b905060006200022784828501620001b2565b60008301525060206200023d8482850162000249565b60208301525092915050565b6000815190506200025a81620003cb565b92915050565b6000602082840312156200027357600080fd5b600082015167ffffffffffffffff8111156200028e57600080fd5b6200029c84828501620001c9565b91505092915050565b6000620002b1620002c4565b9050620002bf82826200033b565b919050565b6000604051905090565b600067ffffffffffffffff821115620002ec57620002eb62000371565b5b602082029050602081019050919050565b60006200030a8262000311565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200034682620003a0565b810181811067ffffffffffffffff8211171562000368576200036762000371565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620003bc81620002fd565b8114620003c857600080fd5b50565b620003d68162000331565b8114620003e257600080fd5b50565b6117f880620003f56000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80636389e107116100665780636389e1071461011c5780639c1121411461014c578063dabc4d5114610168578063ec45622a14610198578063f452ffa2146101b457610093565b80631783efc31461009857806343989f85146100b4578063568ee826146100d0578063638480be146100ec575b600080fd5b6100b260048036038101906100ad9190610e3c565b6101e4565b005b6100ce60048036038101906100c99190610f17565b6101f4565b005b6100ea60048036038101906100e59190610e00565b61020c565b005b61010660048036038101906101019190610dd7565b610264565b604051610113919061145d565b60405180910390f35b61013660048036038101906101319190610dd7565b610283565b604051610143919061145d565b60405180910390f35b61016660048036038101906101619190610e78565b6102a2565b005b610182600480360381019061017d9190610dd7565b610372565b60405161018f919061145d565b60405180910390f35b6101b260048036038101906101ad9190610fb2565b610391565b005b6101ce60048036038101906101c99190610ec7565b6103ab565b6040516101db9190611326565b60405180910390f35b816101ef83836106e3565b505050565b8561020387878787878761080a565b50505050505050565b81816002600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000806000838152602001908152602001600020600201549050919050565b6000806000838152602001908152602001600020600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561030f57600080fd5b61031b83836000610932565b806002600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000806000838152602001908152602001600020600101549050919050565b866103a188888888888888610a8a565b5050505050505050565b6000806103b784610283565b905060006103c485610372565b905060006001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663f5c9d69e60405180604001604052808860006008811061045f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201358152602001886001600881106104a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020135815250604051806040016040528060405180604001604052808b6002600881106104fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581526020018b60036008811061053f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020135815250815260200160405180604001604052808b600460088110610591577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581526020018b6005600881106105d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581525081525060405180604001604052808a600660088110610625577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581526020018a600760088110610669577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002013581525060405180604001604052808d8152602001888152506040518563ffffffff1660e01b81526004016106a594939291906112df565b60006040518083038186803b1580156106bd57600080fd5b505afa1580156106d1573d6000803e3d6000fd5b50505050600193505050509392505050565b60006106ee83610283565b1415610726576040517f029f057900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008083815260200190815260200160002073__$0c6eb7207c37accf1552a1c47686411ac0$__63168703fa9091836040518363ffffffff1660e01b8152600401610772929190611341565b60006040518083038186803b15801561078a57600080fd5b505af415801561079e573d6000803e3d6000fd5b5050505060006107ad83610372565b9050600060016107bc85610264565b6107c69190611682565b9050837f19239b3f93cd10558aaf11423af70c77763bf54f52bcc75bfa74d4d13548cde98285856040516107fc939291906114a1565b60405180910390a250505050565b600061081587610372565b141561084d576040517f029f057900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008087815260200190815260200160002073__$0c6eb7207c37accf1552a1c47686411ac0$__630629596f909187878787876040518763ffffffff1660e01b81526004016108a19695949392919061136a565b60006040518083038186803b1580156108b957600080fd5b505af41580156108cd573d6000803e3d6000fd5b5050505060006108dc87610372565b905060006108ea8484610bb7565b9050877f3108849c053c77b8073a11256dffb5ffd5b55e93e105a355e1c9061db890d871828985604051610920939291906114a1565b60405180910390a25050505050505050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001831061098b576040517fa61c78ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061099684610283565b146109cd576040517f8121725b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008084815260200190815260200160002073__$0c6eb7207c37accf1552a1c47686411ac0$__631095fbb4909184846040518463ffffffff1660e01b8152600401610a1b939291906113c1565b60006040518083038186803b158015610a3357600080fd5b505af4158015610a47573d6000803e3d6000fd5b50505050827f0d000126c26c1bbe400fd2332187f75d58b69306f9ec47b408686189d3a008338383604051610a7d929190611478565b60405180910390a2505050565b6000610a9588610372565b1415610acd576040517f029f057900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008088815260200190815260200160002073__$0c6eb7207c37accf1552a1c47686411ac0$__63a547882790918888888888886040518863ffffffff1660e01b8152600401610b2397969594939291906113f8565b60006040518083038186803b158015610b3b57600080fd5b505af4158015610b4f573d6000803e3d6000fd5b505050506000610b5e88610372565b90506000610b6c8484610bb7565b9050887fea3588e4a2a0c93d6a0e69dfeaf7496f43ccccf02ad9ce0a5b7627cbca4b61b1828a8a86604051610ba494939291906114d8565b60405180910390a2505050505050505050565b6000806000905060008484905090505b60008160ff161115610cdb576000821180610c42575060008585600184610bee91906116b6565b60ff16818110610c27577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610c3c9190611062565b60ff1614155b15610ccf57600282610c549190611628565b915060018585600184610c6791906116b6565b60ff16818110610ca0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610cb59190611062565b60ff161415610cce57600182610ccb91906115d2565b91505b5b80600190039050610bc7565b508091505092915050565b600081359050610cf58161177d565b92915050565b600081905082602060080282011115610d1357600080fd5b92915050565b60008083601f840112610d2b57600080fd5b8235905067ffffffffffffffff811115610d4457600080fd5b602083019150836020820283011115610d5c57600080fd5b9250929050565b60008083601f840112610d7557600080fd5b8235905067ffffffffffffffff811115610d8e57600080fd5b602083019150836020820283011115610da657600080fd5b9250929050565b600081359050610dbc81611794565b92915050565b600081359050610dd1816117ab565b92915050565b600060208284031215610de957600080fd5b6000610df784828501610dad565b91505092915050565b60008060408385031215610e1357600080fd5b6000610e2185828601610dad565b9250506020610e3285828601610ce6565b9150509250929050565b60008060408385031215610e4f57600080fd5b6000610e5d85828601610dad565b9250506020610e6e85828601610dad565b9150509250929050565b600080600060608486031215610e8d57600080fd5b6000610e9b86828701610dad565b9350506020610eac86828701610dad565b9250506040610ebd86828701610ce6565b9150509250925092565b60008060006101408486031215610edd57600080fd5b6000610eeb86828701610dad565b9350506020610efc86828701610dad565b9250506040610f0d86828701610cfb565b9150509250925092565b60008060008060008060808789031215610f3057600080fd5b6000610f3e89828a01610dad565b9650506020610f4f89828a01610dad565b955050604087013567ffffffffffffffff811115610f6c57600080fd5b610f7889828a01610d19565b9450945050606087013567ffffffffffffffff811115610f9757600080fd5b610fa389828a01610d63565b92509250509295509295509295565b600080600080600080600060a0888a031215610fcd57600080fd5b6000610fdb8a828b01610dad565b9750506020610fec8a828b01610dad565b9650506040610ffd8a828b01610dad565b955050606088013567ffffffffffffffff81111561101a57600080fd5b6110268a828b01610d19565b9450945050608088013567ffffffffffffffff81111561104557600080fd5b6110518a828b01610d63565b925092505092959891949750929550565b60006020828403121561107457600080fd5b600061108284828501610dc2565b91505092915050565b6000611097838361112a565b60408301905092915050565b60006110af83836112a3565b60208301905092915050565b60006110c783836112d0565b60208301905092915050565b6110dc8161153b565b6110e68184611578565b92506110f18261151d565b8060005b83811015611122578151611109878261108b565b965061111483611551565b9250506001810190506110f5565b505050505050565b61113381611546565b61113d8184611583565b925061114882611527565b8060005b8381101561117957815161116087826110a3565b965061116b8361155e565b92505060018101905061114c565b505050505050565b61118a81611546565b611194818461158e565b925061119f82611527565b8060005b838110156111d05781516111b787826110a3565b96506111c28361155e565b9250506001810190506111a3565b505050505050565b60006111e48385611599565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561121357600080fd5b60208302925061122483858461173f565b82840190509392505050565b600061123c83856115aa565b935061124782611531565b8060005b858110156112805761125d82846115bb565b61126788826110bb565b97506112728361156b565b92505060018101905061124b565b5085925050509392505050565b611296816116fc565b82525050565b8082525050565b6112ac81611728565b82525050565b6112bb81611728565b82525050565b6112ca81611728565b82525050565b6112d981611732565b82525050565b6000610140820190506112f56000830187611181565b61130260408301866110d3565b61130f60c0830185611181565b61131d610100830184611181565b95945050505050565b600060208201905061133b600083018461128d565b92915050565b6000604082019050611356600083018561129c565b61136360208301846112c1565b9392505050565b600060808201905061137f600083018961129c565b61138c60208301886112c1565b818103604083015261139f8186886111d8565b905081810360608301526113b4818486611230565b9050979650505050505050565b60006060820190506113d6600083018661129c565b6113e360208301856112c1565b6113f060408301846112c1565b949350505050565b600060a08201905061140d600083018a61129c565b61141a60208301896112c1565b61142760408301886112c1565b818103606083015261143a8186886111d8565b9050818103608083015261144f818486611230565b905098975050505050505050565b600060208201905061147260008301846112b2565b92915050565b600060408201905061148d60008301856112b2565b61149a60208301846112b2565b9392505050565b60006060820190506114b660008301866112b2565b6114c360208301856112b2565b6114d060408301846112b2565b949350505050565b60006080820190506114ed60008301876112b2565b6114fa60208301866112b2565b61150760408301856112b2565b61151460608301846112b2565b95945050505050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006115ca6020840184610dc2565b905092915050565b60006115dd82611728565b91506115e883611728565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561161d5761161c61174e565b5b828201905092915050565b600061163382611728565b915061163e83611728565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116775761167661174e565b5b828202905092915050565b600061168d82611728565b915061169883611728565b9250828210156116ab576116aa61174e565b5b828203905092915050565b60006116c182611732565b91506116cc83611732565b9250828210156116df576116de61174e565b5b828203905092915050565b60006116f582611708565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b611786816116ea565b811461179157600080fd5b50565b61179d81611728565b81146117a857600080fd5b50565b6117b481611732565b81146117bf57600080fd5b5056fea2646970667358221220c88f90ff225daf76a97966879edee25573dae56523f8a4df6c6ee3f69647cb7e64736f6c63430008040033";

type GroupConstructorParams =
  | [linkLibraryAddresses: GroupLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Group__factory extends ContractFactory {
  constructor(...args: GroupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Group__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: GroupLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$0c6eb7207c37accf1552a1c47686411ac0\\$__", "g"),
      linkLibraryAddresses[
        "@zk-kit/incremental-merkle-tree.sol/IncrementalBinaryTree.sol:IncrementalBinaryTree"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _verifiers: IGroup.VerifierStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Group> {
    return super.deploy(_verifiers, overrides || {}) as Promise<Group>;
  }
  override getDeployTransaction(
    _verifiers: IGroup.VerifierStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifiers, overrides || {});
  }
  override attach(address: string): Group {
    return super.attach(address) as Group;
  }
  override connect(signer: Signer): Group__factory {
    return super.connect(signer) as Group__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroupInterface {
    return new utils.Interface(_abi) as GroupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Group {
    return new Contract(address, _abi, signerOrProvider) as Group;
  }
}

export interface GroupLibraryAddresses {
  ["@zk-kit/incremental-merkle-tree.sol/IncrementalBinaryTree.sol:IncrementalBinaryTree"]: string;
}
